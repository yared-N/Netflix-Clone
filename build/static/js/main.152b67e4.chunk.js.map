{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","orginal_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","style","padding","videoId","opts","heighr","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOrginals","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAQeA,E,OANEC,EAAMC,OAAO,CAC1BC,QAAS,iC,yBC0DEC,MAtDf,YAA6C,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WAAa,EACZC,mBAAS,IADG,mBACjCC,EADiC,KACzBC,EADyB,OAEJF,mBAAS,IAFL,mBAEjCG,EAFiC,KAErBC,EAFqB,KAgCxC,OA7BAC,qBAAU,WAAK,4CACX,4BAAAC,EAAA,sEAC4Bb,EAAMc,IAAIT,GADtC,cACYU,EADZ,OAGMN,EAAUM,EAAQC,KAAKC,SAH7B,kBAIaF,GAJb,4CADW,uBAAC,WAAD,wBAOPG,KACF,CAACb,IAsBH,sBAAKc,UAAU,MAAf,UACE,6BAAKf,IACL,qBAAKe,UAAU,eAAf,SACCX,EAAOY,KAAI,SAACC,GAAD,OACJ,qBAEGC,QAAS,kBApBH,SAACD,GACjBX,EACDC,EAAc,IAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,OAAQH,EAAMI,cACjDC,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDpB,EAAciB,EAAUd,IAAI,SAE7BkB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAWJG,CAAYf,IAC5BF,UAAS,sBAAiBb,GAAc,oBACxC+B,IAAG,UA1CN,wCA0CM,OAAgB/B,EAAae,EAAMiB,YAAcjB,EAAMkB,eAE1DC,IAAKnB,EAAMG,MALLH,EAAMoB,SAStB,qBAAKC,MAAO,CAAEC,QAAS,QAAvB,SACMjC,GAAc,cAAC,IAAD,CAASkC,QAASlC,EAAYmC,KApCvC,CACPC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,YCvBpBC,EAAU,mCAYDC,EAVC,CACZC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,qBAAqB,wBAAD,OAA0BH,EAA1B,sBACpBI,oBAAoB,4BAAD,OAA8BJ,EAA9B,mBACnBK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,MCuCPU,MA7Cf,WAAmB,IAeIC,EAAKC,EAfV,EACWvD,mBAAS,IADpB,mBACRc,EADQ,KACD0C,EADC,KAkBhB,OAhBEnD,qBAAU,WAAM,4CACR,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIqC,EAASE,sBAD3C,cACQtC,EADR,OAEEgD,EAAQ,OACNhD,QADM,IACNA,OADM,EACNA,EAASC,KAAKC,QACZ+C,KAAKC,MAAMD,KAAKE,SAAWnD,EAAQC,KAAKC,QAAQkD,UAJtD,kBAOSpD,GAPT,4CADQ,uBAAC,WAAD,wBAURG,KACC,IACHgB,QAAQC,IAAId,GAKlB,yBACEF,UAAU,SACVuB,MAAO,CACL0B,eAAgB,QAChBC,gBAAgB,4CAAD,cAA8ChD,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAOkB,cAArD,MACf+B,mBAAoB,iBALxB,UAQE,sBAAKnD,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAd,UACQ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOkD,iBAEzC,sBAAKpD,UAAU,kBAAf,UACE,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,wBAEF,oBAAIA,UAAU,sBAAd,UApBe0C,EAqBN,OAACxC,QAAD,IAACA,OAAD,EAACA,EAAOmD,SArBGV,EAqBO,KApBrB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAID,EAAIY,OAAO,EAAGX,EAAI,GAAK,MAAQD,QAuBtD,qBAAK1C,UAAU,2B,MCZNuD,MA7Bf,WAAgB,IAAD,EACkBnE,oBAAS,GAD3B,mBACFoE,EADE,KACIC,EADJ,KAaT,OAXAhE,qBAAU,WAMR,OALAiE,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBH,GAAW,GACNA,GAAW,MAEb,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,sBAAK7D,UAAS,cAASwD,GAAQ,cAA/B,UACE,qBACExD,UAAU,YACVkB,IAAI,4mBACJG,IAAI,iBAEN,qBACErB,UAAU,cACVkB,IAAI,+EACJG,IAAI,oBCIDyC,MAtBf,WACE,OACE,sBAAK9D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEf,MAAM,oBACNC,SAAU8C,EAASE,qBAAsB/C,YAAU,IACrD,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAU8C,EAASC,gBAC7C,cAAC,EAAD,CAAKhD,MAAM,YAAYC,SAAU8C,EAASG,sBAC1C,cAAC,EAAD,CAAKlD,MAAM,gBAAgBC,SAAU8C,EAASI,oBAC9C,cAAC,EAAD,CAAKnD,MAAM,gBAAgBC,SAAU8C,EAASK,oBAC9C,cAAC,EAAD,CAAKpD,MAAM,gBAAgBC,SAAU8C,EAASM,oBAC9C,cAAC,EAAD,CAAKrD,MAAM,iBAAiBC,SAAU8C,EAASO,qBAC/C,cAAC,EAAD,CACEtD,MAAM,uBACNC,SAAU8C,EAASQ,yBCXZuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.152b67e4.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\n//  instance.get(\"/movie/top_rated\");\n\nexport default instance;","import React,{useState,useEffect} from 'react';\nimport \"./Row.css\";\nimport axios from \"./axios\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({title, fetchUrl, isLargeRow}) {\n    const [movies, setMovies] = useState([])\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    useEffect(() =>{\n        async function fetchData(){\n              const request = await axios.get(fetchUrl);\n                //  console.log(request);         \n              setMovies(request.data.results);\n              return request\n          }\n            fetchData();\n       }, [fetchUrl]);\n        const opts = {\n              heighr: \"390\",\n              width: \"100%\",\n              playerVars: {\n                autoplay: 1,\n              }\n            }\n       const handleClick = (movie) => {\n        if(trailerUrl){\n          setTrailerUrl('')\n        }else {\n          movieTrailer(movie?.title || movie?.name || movie.orginal_name)\n          .then((url) => {\n            const urlParams = new URLSearchParams(new URL(url).search)\n            setTrailerUrl(urlParams.get('v'))\n          })\n          .catch((error) => console.log(error))\n        }\n      }\n      //  console.log(movies)\n    return (\n        <div className=\"row\">\n          <h1>{title}</h1> \n          <div className=\"row__posters\">\n          {movies.map((movie) => (\n                  <img\n                     key={movie.id}\n                     onClick={() => handleClick(movie)}\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                    //  src={`https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                    alt={movie.name}\n                  />\n                ))}\n          </div>\n          <div style={{ padding: \"40px\"}}>\n               {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n              </div> \n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY = \"006f72efa14871e32d0fc54a5a455d77\"\n\nconst requests ={\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOrginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\nexport default requests;","import React, { useEffect, useState } from 'react';\nimport   \"./Banner.css\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nfunction Banner() {\n    const[movie, setMovie] = useState([]);\n    useEffect(() => {\n            async function fetchData() {   \n              const request = await axios.get(requests.fetchNetflixOrginals);\n              setMovie(\n                request?.data.results[\n                  Math.floor(Math.random() * request.data.results.length)\n                ]\n              );\n              return request;\n            }\n            fetchData();\n          }, []);\n          console.log(movie)\n     function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n   }\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\">Play</button>\n          <button className=\"banner__button\">My List</button>\n        </div>\n        <h1 className=\"banner__description\">\n        {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n      <div className=\"banner__fadeBottom\" />\n    </header>\n  );\n}\n\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\nimport \"./Nav.css\"\nfunction Nav() {\n      const [show, handleShow] = useState(false);\n      useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n          if (window.scrollY > 100) {\n            handleShow(true);\n          } else handleShow(false);\n        });\n        return () => {\n          window.removeEventListener(\"scroll\");\n        };\n      }, []);\n      \n      return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n          <img\n            className=\"nav__logo\"\n            src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/12c6f684-d447-4457-84fa-12033cfd581e/d9z3o32-2c299a83-49a9-44c2-bc23-b0b5070a546b.png/v1/fill/w_1024,h_512,strp/netflix_logo_background__2_by_sixmonthslate_d9z3o32-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD01MTIiLCJwYXRoIjoiXC9mXC8xMmM2ZjY4NC1kNDQ3LTQ0NTctODRmYS0xMjAzM2NmZDU4MWVcL2Q5ejNvMzItMmMyOTlhODMtNDlhOS00NGMyLWJjMjMtYjBiNTA3MGE1NDZiLnBuZyIsIndpZHRoIjoiPD0xMDI0In1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmltYWdlLm9wZXJhdGlvbnMiXX0.WKy-rj_8y7ziLuhhtAES7jddy-eUpz6PQQ331bp7rRI\"\n            alt=\"Netflix Logo\"\n          />\n          <img\n            className=\"nav__avatar\"\n            src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n            alt=\"Avatar logo\"\n          />\n        </div  >\n      );\n    }\n\nexport default Nav\n","// import logo from './logo.svg';\nimport './App.css';\nimport Row from \"./Row\"\nimport requests from './requests'\nimport Banner from './Banner';\nimport Nav from \"./Nav\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOrginals} isLargeRow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRatedMovies} /> \n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} /> \n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} /> \n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} /> \n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} /> \n      <Row\n        title=\"Documentaries Movies\"\n        fetchUrl={requests.fetchDocumentaries}\n      /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}